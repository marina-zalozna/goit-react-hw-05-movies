{"version":3,"file":"static/js/47.d7ef8f58.chunk.js","mappings":"mXAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAa,mCAAG,WAAMC,GAAN,uFACJH,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACqBE,IAFjB,cACrBC,EADqB,yBAIpBA,EAASC,MAJW,2CAAH,sDAObC,EAAe,mCAAG,oGACNN,EAAAA,EAAAA,IAAA,qCAAwCC,IADlC,cACvBG,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qDAKfE,EAAc,mCAAG,WAAMC,GAAN,uFACLR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,oBAAkCP,IAD7B,cACtBG,EADsB,yBAErBA,EAASC,MAFY,2CAAH,sDAKdI,EAAY,mCAAG,WAAMD,GAAN,uFACHR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,4BAA0CP,IADvC,cACpBG,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZK,EAAc,mCAAG,WAAMF,GAAN,uFACLR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,4BAA0CP,IADrC,cACtBG,EADsB,yBAErBA,EAASC,MAFY,2CAAH,qD,yHCC3B,EAxBsB,WACpB,IAAQG,GAAOG,EAAAA,EAAAA,MAAPH,GACR,GAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRL,EAAAA,EAAAA,gBAAeF,GAAIQ,MAAK,SAAAC,GAAG,OAAIH,EAAWG,EAAIC,QAAnB,GAC5B,GAAE,CAACV,IAEmB,IAAnBK,EAAQM,QACH,2CAIP,wBACGN,EAAQO,KAAI,gBAAGZ,EAAH,EAAGA,GAAIa,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,OAAhB,OACX,2BACE,0BAAKA,EAAL,SACA,uBAAID,MAFGb,EADE,KAQlB,EChBD,EARgB,WACd,OACE,0BACE,SAAC,EAAD,KAGL,C","sources":["Api.js","components/ReviewsMovies/ReviewsMovies.jsx","pages/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e6343f2aadc575b1d7088cbe8f702b7d';\n\nexport const onMovieSearch = async request => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${request}`\n  );\n  return response.data;\n};\n\nexport const onMovieTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const onMovieDetails = async id => {\n  const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const onMovieCasts = async id => {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const onMovieReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data;\n};","import { onMovieReviews } from 'Api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst ReviewsMovies = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    onMovieReviews(id).then(res => setReviews(res.results));\n  }, [id]);\n\n  if (reviews.length === 0) {\n    return <h3>No reviews...</h3>;\n  }\n\n  return (\n    <ul>\n      {reviews.map(({ id, content, author }) => (\n        <li key={id}>\n          <h3>{author} :</h3>\n          <p>{content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ReviewsMovies;","import ReviewsMovies from '../components/ReviewsMovies/ReviewsMovies';\n\nconst Reviews = () => {\n  return (\n    <div>\n      <ReviewsMovies />\n    </div>\n  );\n};\n\nexport default Reviews;"],"names":["axios","API_KEY","onMovieSearch","request","response","data","onMovieTrending","onMovieDetails","id","onMovieCasts","onMovieReviews","useParams","useState","reviews","setReviews","useEffect","then","res","results","length","map","content","author"],"sourceRoot":""}