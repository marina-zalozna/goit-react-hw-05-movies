{"version":3,"file":"static/js/985.06b6dd94.chunk.js","mappings":"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","sources":["Api.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","pages/Movies.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e6343f2aadc575b1d7088cbe8f702b7d';\n\nexport const onMovieSearch = async request => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${request}`\n  );\n  return response.data;\n};\n\nexport const onMovieTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const onMovieDetails = async id => {\n  const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const onMovieCasts = async id => {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const onMovieReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data;\n};","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Main = styled.main`\n  background-color: #f5f5f5;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  display: grid;\n  max-width: 280px;\n  justify-content: center;\n  grid-gap: 20px;\n  grid-auto-rows: auto;\n  padding-top: 20px;\n  padding-bottom: 40px;\n  margin-left: auto;\n  margin-right: auto;\n  @media screen and (min-width: 768px) {\n    grid-template-columns: repeat(2, 1fr);\n    grid-gap: 32px;\n    padding-top: 60px;\n    padding-bottom: 60px;\n    max-width: 700px;\n  }\n  @media screen and (min-width: 1280px) {\n    grid-template-columns: repeat(3, 1fr);\n    grid-gap: 32px 16px;\n    max-width: 1200px;\n  }\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  border-radius: 6px;\n  transition: transform 400ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 600ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  width: 300px;\n`;\n\nexport const Img = styled.img`\n  width: 300px;\n  height: 398px;\n  object-fit: cover;\n  border-top-left-radius: 6px;\n  border-top-right-radius: 6px;\n  @media screen and (min-width: 768px) {\n    width: 336px;\n    height: 455px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 390px;\n    height: 574px;\n  }\n`;\n\nexport const TextWrap = styled.div`\n  margin-right: auto;\n  padding: 10px 5px;\n  @media screen and (min-width: 768px) {\n    padding-top: 8px;\n  }\n  @media screen and (min-width: 1280px) {\n    padding-top: 12px;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 14px;\n  letter-spacing: 0.04em;\n  padding-bottom: 8px;\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    line-height: 20px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n    line-height: 20px;\n  }\n`;\n\nexport const Text = styled.p`\n  letter-spacing: 0.04em;\n  color: #ff6b08;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 16px;\n`;","import { Link, useLocation } from 'react-router-dom';\nimport {\n  List,\n  Item,\n  Img,\n  TextWrap,\n  Title,\n  Text,\n  Main,\n} from './MoviesList.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movies }) => {\n  const moviesPicture = {\n    base_url: 'https://image.tmdb.org/t/p/',\n    size: 'w300',\n  };\n\n  const location = useLocation();\n  return (\n    <Main>\n      <List>\n        {movies.map(\n          ({ id, title, poster_path, release_date, vote_average }) => {\n            if (poster_path === null) {\n              return (\n                <Item key={id}>\n                  <Link to={`${id}`} state={{ from: location }}>\n                    <div>\n                      {' '}\n                      <Img\n                        alt={title}\n                        height={450}\n                        width={300}\n                        src=\"https://media.istockphoto.com/vectors/error-page-or-file-not-found-icon-vector-id924949200?k=20&m=924949200&s=170667a&w=0&h=-g01ME1udkojlHCZeoa1UnMkWZZppdIFHEKk6wMvxrs=\"\n                      />\n                    </div>\n                    <TextWrap>\n                      <Title>{title}</Title>\n                      <Text>\n                        Date: {release_date} | {vote_average}\n                      </Text>\n                    </TextWrap>\n                  </Link>\n                </Item>\n              );\n            }\n            return (\n              <Item key={id}>\n                <Link to={`${id}`} state={{ from: location }}>\n                  <div>\n                    <Img\n                      alt={title}\n                      src={`${moviesPicture.base_url}${moviesPicture.size}${poster_path}`}\n                    />\n                  </div>\n                  <TextWrap>\n                    <Title>{title}</Title>\n                    <Text>\n                      Date: {release_date} | {vote_average}\n                    </Text>\n                  </TextWrap>\n                </Link>\n              </Item>\n            );\n          }\n        )}\n      </List>\n    </Main>\n  );\n};\n\nList.propTypes = {\n  trendingMovies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      release_date: PropTypes.string,\n    })\n  ),\n};\n\nexport default MovieList;","import styled from 'styled-components';\n\nexport const WrapMain = styled.div`\n  background-color: #f5f5f5;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: rgb(255, 255, 255);\n  border-radius: 3px;\n  overflow: hidden;\n`;\nexport const Input = styled.input`\n  display: flex;\n  font-size: 20px;\n  align-items: center;\n  padding: 15px;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;","import { useSearchParams } from 'react-router-dom';\nimport { Input, Wrap, WrapMain } from './SearchBar.styled';\n\nconst SearchBar = ({ onSearchSubmit }) => {\n  const [searchParam, setSearchParam] = useSearchParams();\n  const query = searchParam.get('query');\n\n  if (query !== '') {\n    onSearchSubmit(query);\n  }\n\n  const handleInput = e => {\n    onSearchSubmit(query);\n    setSearchParam({ query: e.target.value });\n  };\n\n  return (\n    <WrapMain>\n      <Wrap>\n        <Input type=\"text\" onChange={handleInput} value={query} />\n      </Wrap>\n    </WrapMain>\n  );\n};\n\nexport default SearchBar;","import { onMovieSearch } from 'Api';\nimport MovieList from 'components/MoviesList/MoviesList';\nimport Search from 'components/SearchBar/SearchBar';\nimport { useState } from 'react';\nimport { Outlet } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n\n  const handleInput = async e => {\n    return await onMovieSearch(e).then(res => setMovies(res.results));\n  };\n\n  return (\n    <div>\n      <Search onSubmit={handleInput}></Search>\n      <MovieList movies={movies} />\n      <Outlet />\n    </div>\n  );\n};\n\nexport default Movies;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["axios","API_KEY","onMovieSearch","request","response","data","onMovieTrending","onMovieDetails","id","onMovieCasts","onMovieReviews","Main","styled","List","Item","Img","NavLink","TextWrap","Title","Text","propTypes","trendingMovies","PropTypes","title","release_date","movies","moviesPicture","location","useLocation","map","poster_path","vote_average","to","state","from","alt","height","width","src","WrapMain","Wrap","Input","onSearchSubmit","useSearchParams","searchParam","setSearchParam","query","get","type","onChange","e","target","value","useState","setMovies","handleInput","then","res","results","onSubmit","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}